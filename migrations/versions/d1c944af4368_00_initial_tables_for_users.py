"""00_initial_tables_for_users

Revision ID: d1c944af4368
Revises:
Create Date: 2024-09-28 11:41:28.481280+00:00

"""

from typing import Sequence

import sqlalchemy as sa
import sqlmodel
import sqlmodel.sql.sqltypes
from alembic import op


# revision identifiers, used by Alembic.
revision: str = "d1c944af4368"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("email", sa.String(length=100), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("account_type", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "weather_data",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("zip_code", sa.String(length=10), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column("weather_conditions", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_weather_data_zip_code"), "weather_data", ["zip_code"], unique=False
    )
    op.create_table(
        "activities",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("type", sa.String(length=50), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("date", sa.DateTime(), nullable=True),
        sa.Column("duration", sa.Integer(), nullable=False),
        sa.Column("location", sa.String(length=100), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_details",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("first_name", sa.String(length=100), nullable=False),
        sa.Column("last_name", sa.String(length=100), nullable=False),
        sa.Column("age", sa.Integer(), nullable=True),
        sa.Column("address_line1", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("address_line2", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("city", sa.String(length=50), nullable=True),
        sa.Column("state", sa.String(length=30), nullable=True),
        sa.Column("zip_code", sa.String(length=20), nullable=True),
        sa.Column("country", sa.String(length=50), nullable=True),
        sa.Column("phone_number", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("ethnicity", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_table(
        "user_medical_details",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("blood_type", sa.String(length=3), nullable=True),
        sa.Column("height", sa.Float(), nullable=True),
        sa.Column("weight", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_table(
        "user_allergies",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_medical_id", sa.Uuid(), nullable=True),
        sa.Column("allergen", sa.String(length=100), nullable=True),
        sa.Column("reaction", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_medical_id"], ["user_medical_details.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_health_conditions",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_medical_id", sa.Uuid(), nullable=True),
        sa.Column("condition", sa.String(length=100), nullable=True),
        sa.Column("severity", sa.String(length=50), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_medical_id"], ["user_medical_details.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_languages",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_details_id", sa.Uuid(), nullable=False),
        sa.Column("is_preferred", sa.Boolean(), nullable=False),
        sa.Column(
            "name", sa.Enum("ENGLISH", "SPANISH", name="language"), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["user_details_id"], ["user_details.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_medications",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_medical_id", sa.Uuid(), nullable=True),
        sa.Column("name", sa.String(length=100), nullable=True),
        sa.Column("dosage", sa.String(length=100), nullable=True),
        sa.Column("frequency", sa.String(length=50), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_medical_id"], ["user_medical_details.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "weather_sensitivities",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_medical_id", sa.Uuid(), nullable=True),
        sa.Column("type", sa.String(length=50), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_medical_id"], ["user_medical_details.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("weather_sensitivities")
    op.drop_table("user_medications")
    op.drop_table("user_languages")
    op.drop_table("user_health_conditions")
    op.drop_table("user_allergies")
    op.drop_table("user_medical_details")
    op.drop_table("user_details")
    op.drop_table("activities")
    op.drop_index(op.f("ix_weather_data_zip_code"), table_name="weather_data")
    op.drop_table("weather_data")
    op.drop_table("users")
    # ### end Alembic commands ###
