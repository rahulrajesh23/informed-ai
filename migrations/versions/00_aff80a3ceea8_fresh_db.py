"""

Revision ID: aff80a3ceea8
Revises:
Create Date: 2024-12-22 23:41:19.611737+00:00

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel
import sqlmodel.sql.sqltypes
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "aff80a3ceea8"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("email", sa.String(length=100), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column(
            "account_type",
            sa.Enum("USER", "ADMIN", "SUPERADMIN", name="accounttype"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("user_id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "weather_data",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("zip_code", sa.String(length=10), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column("weather_conditions", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_weather_data_zip_code"), "weather_data", ["zip_code"], unique=False
    )
    op.create_table(
        "weather_alerts",
        sa.Column("weather_alert_id", sa.Uuid(), nullable=False),
        sa.Column("zip_code", sa.String(length=20), nullable=False),
        sa.Column("message", sa.Text(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created_by", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("cancelled_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("weather_alert_id"),
    )
    op.create_index(
        op.f("ix_weather_alerts_zip_code"),
        "weather_alerts",
        ["zip_code"],
        unique=False,
    )
    op.create_table(
        "chat_thread",
        sa.Column("chat_thread_id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("chat_thread_id"),
    )
    op.create_table(
        "queries",
        sa.Column("query", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("query_id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("sources", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("state", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("answer", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.user_id"],
        ),
        sa.PrimaryKeyConstraint("query_id"),
    )
    op.create_table(
        "user_details",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("first_name", sa.String(length=100), nullable=False),
        sa.Column("last_name", sa.String(length=100), nullable=False),
        sa.Column("age", sa.Integer(), nullable=True),
        sa.Column("address_line1", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("address_line2", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("city", sa.String(length=50), nullable=True),
        sa.Column("state", sa.String(length=30), nullable=True),
        sa.Column("zip_code", sa.String(length=20), nullable=True),
        sa.Column("country", sa.String(length=50), nullable=True),
        sa.Column("phone_number", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("ethnicity", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "language",
            sa.Enum("ENGLISH", "SPANISH", "TAGALOG", name="language"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_table(
        "user_medical_details",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("blood_type", sa.String(length=3), nullable=True),
        sa.Column("height", sa.Float(), nullable=True),
        sa.Column("weight", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_table(
        "message",
        sa.Column("message_id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.Float(), nullable=False),
        sa.Column("content", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("chat_thread_id", sa.Uuid(), nullable=False),
        sa.Column("source", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "language",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=True,
        ),
        sa.Column("response_type", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("user_id", sa.Uuid(), nullable=True),
        sa.Column("query_id", sa.Uuid(), nullable=True),
        sa.Column("acknowledged", sa.Boolean(), nullable=False),
        sa.Column(
            "requested_response_type",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["chat_thread_id"], ["chat_thread.chat_thread_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("message_id"),
    )
    op.create_index(
        op.f("ix_message_chat_thread_id"), "message", ["chat_thread_id"], unique=False
    )
    op.create_table(
        "user_allergies",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_medical_id", sa.Uuid(), nullable=True),
        sa.Column("allergen", sa.String(length=100), nullable=True),
        sa.Column("reaction", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_medical_id"], ["user_medical_details.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_health_conditions",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_medical_id", sa.Uuid(), nullable=True),
        sa.Column("condition", sa.String(length=100), nullable=True),
        sa.Column("severity", sa.String(length=50), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_medical_id"], ["user_medical_details.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_medications",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_medical_id", sa.Uuid(), nullable=True),
        sa.Column("name", sa.String(length=100), nullable=True),
        sa.Column("dosage", sa.String(length=100), nullable=True),
        sa.Column("frequency", sa.String(length=50), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_medical_id"], ["user_medical_details.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "weather_sensitivities",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_medical_id", sa.Uuid(), nullable=True),
        sa.Column("type", sa.String(length=50), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_medical_id"], ["user_medical_details.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("weather_sensitivities")
    op.drop_table("user_medications")
    op.drop_table("user_health_conditions")
    op.drop_table("user_allergies")
    op.drop_index(op.f("ix_message_chat_thread_id"), table_name="message")
    op.drop_table("message")
    op.drop_table("user_medical_details")
    op.drop_table("user_details")
    op.drop_table("queries")
    op.drop_table("chat_thread")
    op.drop_index(op.f("ix_weather_alerts_zip_code"), table_name="weather_alerts")
    op.drop_table("weather_alerts")
    op.drop_index(op.f("ix_weather_data_zip_code"), table_name="weather_data")
    op.drop_table("weather_data")
    op.drop_table("users")
    # ### end Alembic commands ###
